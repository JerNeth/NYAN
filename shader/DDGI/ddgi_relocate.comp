#version 460
#extension GL_GOOGLE_include_directive : enable
#include "../bufferReferences.glsl"
#include "../structs.h"
#include "../bindlessLayouts.glsl"
#include "../common.glsl"
#include "ddgi_common.glsl"

layout(std430, push_constant) uniform PushConstants
{
	uint accBinding;
	uint sceneBinding;
	uint meshBinding;
	uint ddgiBinding;
	uint ddgiCount;
	uint ddgiIndex;
	uint renderTarget;
	vec4 col; //Unused here
	vec4 randomRotation; //Unused here
} constants;

layout(local_size_x_id = 1) in;
layout(local_size_y_id = 2) in;
layout(local_size_z_id = 3) in;

void main() 
{
	DDGIVolume volume = ddgiVolumes[constants.ddgiBinding].volume[constants.ddgiIndex];

	int probeIdx = int(gl_GlobalInvocationID.x);
	int probeCount = int(volume.probeCountX * volume.probeCountY * volume.probeCountZ);
	if(probeIdx >= probeCount)
		return;
	vec3 offset = get_probe_offset(probeIdx, volume);

	int closestBackfaceIdx = -1;
	int closestFrontfaceIdx = -1;
	int furthestFrontfaceIdx = -1;
	float closestBackfaceDist = 1e27;
	float closestFrontfaceDist = 1e27;
	float furthestFrontfaceDist = 0.f;
	float backfaceCount = 0.f;
	set_probe_offset(probeIdx, volume, constants.randomRotation.xyz);
}