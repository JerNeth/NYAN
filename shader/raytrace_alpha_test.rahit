#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_GOOGLE_include_directive : enable
#include "raycommon.glsl"
#include "bufferReferences.glsl"
#include "structs.h"
#include "extracts.glsl"
#include "bindlessLayouts.glsl"
#include "common.glsl"

layout(std430, push_constant) uniform PushConstants
{
    uint accBinding;
	uint sceneBinding;
	uint meshBinding;
} constants;

hitAttributeEXT vec2 baryCoord;

void main()
{

    Scene scene = scenes[constants.sceneBinding].scene;
	Mesh mesh = meshData[nonuniformEXT(constants.meshBinding)].meshes[nonuniformEXT(gl_InstanceCustomIndexEXT)];
	Material material = materials[nonuniformEXT(mesh.materialBinding)].materials[nonuniformEXT(mesh.materialId)];

    const VertexData vertexData = get_uv_data(mesh, baryCoord, gl_PrimitiveID, gl_ObjectToWorldEXT);
    const MaterialData materialData = get_albedo_data(material, vertexData);

	if(materialData.opacity < material.alphaDiscard)
		ignoreIntersectionEXT;
//		terminateRayEXT;
//	else
//		ignoreIntersectionEXT;
}